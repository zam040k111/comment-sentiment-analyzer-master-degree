@model CommentViewModel

@foreach (var comment in Model.Children)
{
    <div class="card card-inner">
        <div class="card-body">
            <div class="row">
                <div class="col-md-2">
                    <img src="https://image.ibb.co/jw55Ex/def_face.jpg" style="max-width: 50%" class="img img-rounded img-fluid" />
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="ratings">
                            @for (var i = 0; i < (int)(comment.Score / 0.1); i++)
                            {
                                <i class="fa fa-star"></i>
                            }
                        </div>
                    </div>
                    <div>Score: @Math.Round(comment.Score * 10, 2)</div>
                </div>
                <div class="col-md-10">
                    <p>
                        <a href="#"><strong>@comment.Name</strong></a>
                        @if (comment.ParentComment != null)
                        {
                            <strong class="float-right">Replied to <a href="#">@comment.ParentComment.Name</a></strong>
                        }
                    </p>
                    @if (!comment.IsDeleted)
                    {
                        <p>
                            @if (comment.IsQuote && comment.ParentComment != null)
                            {
                                <q>@comment.ParentComment.Body</q>
                            }
                            @comment.Body
                        </p>
                        <a class="float-right btn btn-outline-primary btn-sm mrg-t--1" href="ban/@comment.Name">Ban</a>
                        <a class="float-right btn btn-outline-primary btn-sm mrg-t--1"
                           onclick="return confirm('Do you want delete this comment?')" href="removeComment/@comment.Id">Delete</a>
                        <form method="post" action="createComment" , role="form">
                            <input id="ParentCommentId" name="ParentCommentId" type="hidden" value="@comment.Id" />
                            <input id="IsQuote" name="IsQuote" type="hidden" value=true />
                            <button type="submit" class="float-right btn btn-outline-primary btn-sm mrg-t--1"> Quote</button>
                        </form>
                        <form method="post" action="createComment" , role="form">
                            <input id="ParentCommentId" name="ParentCommentId" type="hidden" value="@comment.Id" />
                            <button type="submit" class="float-right btn btn-outline-primary btn-sm mrg-t--1">
                                <i class="fa fa-reply"></i> Reply
                            </button>
                        </form>
                    }
                    else
                    {
                        <p>@comment.Body</p>
                    }
                </div>
            </div>
            @{ Model.Children = Model.Comments.Where(com => com.ParentCommentId == comment.Id).ToList();}
            @await Html.PartialAsync("CommentChildren", Model)
        </div>
    </div>
}
